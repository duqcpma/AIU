/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import static javafx.application.Application.launch;
import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.Label;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuBar;
import javafx.scene.control.MenuItem;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

/**
 *
 * @author mguyer92
 */
final class NewStudent extends Application {

    private Desktop desktop = Desktop.getDesktop();

    private void openFile(File file) {
        try {
            desktop.open(file);
        } catch (IOException ex) {
            Logger.getLogger(
                    NewStudent.class.getName()).log(
                            Level.SEVERE, null, ex
                    );
        }
    }

    private static void configureFileChooser(
            final FileChooser fileChooser) {
        fileChooser.setTitle("Open Image File");
        fileChooser.getExtensionFilters().addAll(
                new FileChooser.ExtensionFilter("All Images", "*.*"),
                new FileChooser.ExtensionFilter("JPG", "*.jpg"),
                new FileChooser.ExtensionFilter("PNG", "*.png")
        );
    }

    @Override
    public void start(final Stage primaryStage
    ) {
        primaryStage.setTitle("New Student Profile");

        GridPane grid = new GridPane();
        grid.setAlignment(Pos.TOP_LEFT);
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setPadding(new Insets(25, 25, 25, 25));

        Text scenetitle = new Text("New Student");
        scenetitle.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
        //scenetitle.setId("welcome-text");
        grid.add(scenetitle, 0, 0, 2, 1);

        Label firstName = new Label("First Name:");
        grid.add(firstName, 0, 1);

        TextField firstNameTextField = new TextField();
        grid.add(firstNameTextField, 1, 1);

        Label lastName = new Label("Last Name:");
        grid.add(lastName, 0, 2);

        TextField lastNameTextField = new TextField();
        grid.add(lastNameTextField, 1, 2);

        Label emailAddress = new Label("Email Address:");
        grid.add(emailAddress, 0, 3);

        TextField emailAddressTextField = new TextField();
        grid.add(emailAddressTextField, 1, 3);

        Label firstGoal = new Label("Primary Goal:");
        grid.add(firstGoal, 0, 4);

        ChoiceBox primaryGoal = new ChoiceBox();
        primaryGoal.setItems(FXCollections.observableArrayList(
                "Get accepted to law school", "Get accepted to college",
                "Get a job", "Become a citizen", "Learn a language"));

        grid.add(primaryGoal, 1, 4);

        Label secondGoal = new Label("Secondary Goal:");
        grid.add(secondGoal, 0, 5);

        ChoiceBox secondaryGoal = new ChoiceBox();
        secondaryGoal.setItems(FXCollections.observableArrayList(
                "Get accepted to law school", "Get accepted to college",
                "Get a job", "Become a citizen", "Learn a language"));

        grid.add(secondaryGoal, 1, 5);

        Button imageBtn = new Button("Upload Image");
        HBox hbBtn1 = new HBox(10);
        hbBtn1.setAlignment(Pos.BOTTOM_RIGHT);
        hbBtn1.getChildren().add(imageBtn);
        grid.add(hbBtn1, 0, 6);

        final FileChooser fileChooser = new FileChooser();

        imageBtn.setOnAction(
                new EventHandler<ActionEvent>() {
                    @Override
                    public void handle(final ActionEvent e) {
                        configureFileChooser(fileChooser);
                        File file = fileChooser.showOpenDialog(primaryStage);
                        if (file != null) {
                            openFile(file);
                        }
                    }
                });

        Button submitBtn = new Button("Submit");
        HBox hbBtn2 = new HBox(10);
        hbBtn2.setAlignment(Pos.BOTTOM_RIGHT);
        hbBtn2.getChildren().add(submitBtn);
        grid.add(hbBtn2, 1, 6);

        submitBtn.setOnAction(new EventHandler<ActionEvent>() {
            public void handle(ActionEvent t) {
                primaryStage.close();
                //System.exit(0);
            }
        });
        Scene scene = new Scene(grid, 400, 350);
        primaryStage.setScene(scene);
        //scene.getStylesheets().add
        //(NewStudentTest.class.getResource("Login.css").toExternalForm());
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }

}

final class Directory extends Application {

    public static class Person {

        private final SimpleStringProperty firstName;
        private final SimpleStringProperty lastName;
        private final SimpleStringProperty email;

        private Person(String fName, String lName, String email) {
            this.firstName = new SimpleStringProperty(fName);
            this.lastName = new SimpleStringProperty(lName);
            this.email = new SimpleStringProperty(email);
        }

        public String getFirstName() {
            return firstName.get();
        }

        public void setFirstName(String fName) {
            firstName.set(fName);
        }

        public String getLastName() {
            return lastName.get();
        }

        public void setLastName(String fName) {
            lastName.set(fName);
        }

        public String getEmail() {
            return email.get();
        }

        public void setEmail(String fName) {
            email.set(fName);
        }

    }

    private TableView table = new TableView();

    public static void main(String[] args) {
        launch(args);
    }

    final ObservableList<Person> data = FXCollections.observableArrayList(
            new Person("Jacob", "Smith", "jacob.smith@example.com"),
            new Person("Isabella", "Johnson", "isabella.johnson@example.com"),
            new Person("Ethan", "Williams", "ethan.williams@example.com"),
            new Person("Emma", "Jones", "emma.jones@example.com"),
            new Person("Michael", "Brown", "michael.brown@example.com")
    );

    @Override
    public void start(Stage stage) {
        Scene scene = new Scene(new Group());
        stage.setTitle("Student Directory");
        stage.setWidth(300);
        stage.setHeight(500);

        final Label label = new Label("Student Directory");
        label.setFont(new Font("Arial", 20));

        table.setEditable(true);

        TableColumn firstNameCol = new TableColumn("First Name");
        TableColumn lastNameCol = new TableColumn("Last Name");
        TableColumn emailCol = new TableColumn("Email");

        firstNameCol.setCellValueFactory(
                new PropertyValueFactory<Person, String>("firstName")
        );
        lastNameCol.setCellValueFactory(
                new PropertyValueFactory<Person, String>("lastName")
        );
        emailCol.setCellValueFactory(
                new PropertyValueFactory<Person, String>("email")
        );

        table.getColumns().addAll(firstNameCol, lastNameCol, emailCol);
        table.setItems(data);

        final VBox vbox = new VBox();
        vbox.setSpacing(5);
        vbox.setPadding(new Insets(10, 0, 0, 10));
        vbox.getChildren().addAll(label, table);

        ((Group) scene.getRoot()).getChildren().addAll(vbox);

        stage.setScene(scene);
        stage.show();
    }
}

final class MainMenu extends Application {

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Main Menu");

        Scene scene = new Scene(new VBox(), 400, 350);
        scene.setFill(Color.OLDLACE);

        MenuBar menuBar = new MenuBar();

        // --- Menu File
        Menu menuFile = new Menu("File");
        MenuItem newProf = new MenuItem("New Student Profile");

        newProf.setOnAction(new EventHandler<ActionEvent>() {
            public void handle(ActionEvent t) {
                NewStudent newStudent = new NewStudent();
                Stage studentStage = new Stage();
                newStudent.start(studentStage);
            }
        });

        MenuItem exit = new MenuItem("Exit");
        exit.setOnAction(new EventHandler<ActionEvent>() {
            public void handle(ActionEvent t) {
                System.exit(0);
            }
        });

        MenuItem newAppointment = new MenuItem("Schedule Appointment");

        menuFile.getItems().addAll(newProf, newAppointment, exit);

        // --- Menu View
        Menu menuView = new Menu("View");
        MenuItem directory = new MenuItem("Student Directory");
        directory.setOnAction(new EventHandler<ActionEvent>() {
            public void handle(ActionEvent t) {
                Directory studentDirectory = new Directory();
                Stage directoryStage = new Stage();
                studentDirectory.start(directoryStage);
            }
        });
        
        MenuItem calendar = new MenuItem("Calendar");

        menuView.getItems().addAll(directory, calendar);

        // --- Menu Help
        Menu menuHelp = new Menu("Help");
        MenuItem tutorial = new MenuItem("Tutorial");

        menuHelp.getItems().addAll(tutorial);

        menuBar.getMenus().addAll(menuFile, menuView, menuHelp);

        ((VBox) scene.getRoot()).getChildren().addAll(menuBar);

        primaryStage.setScene(scene);
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }

}

public class Login extends Application {
    
    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("JavaFX Welcome");
        
        GridPane grid = new GridPane();
        grid.setAlignment(Pos.CENTER);
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setPadding(new Insets(25, 25, 25, 25));
        
        Text scenetitle = new Text("Welcome");
        //scenetitle.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
        scenetitle.setId("welcome-text");
        grid.add(scenetitle, 0, 0, 2, 1);
        
        Label userName = new Label("User Name:");
        grid.add(userName, 0, 1);
        
        TextField userTextField = new TextField();
        grid.add(userTextField, 1, 1);
        
        Label pw = new Label("Password:");
        grid.add(pw, 0, 2);
        
        PasswordField pwBox = new PasswordField();
        grid.add(pwBox, 1, 2);
        
        Button btn = new Button("Sign in ");
        HBox hbBtn = new HBox(10);
        hbBtn.setAlignment(Pos.BOTTOM_RIGHT);
        hbBtn.getChildren().add(btn);
        grid.add(hbBtn, 1, 4);
               
        btn.setOnAction(new EventHandler<ActionEvent>() {
            
            @Override
            public void handle(ActionEvent e) {
                MainMenu menu = new MainMenu();
                Stage menuStage = new Stage();
                menu.start(menuStage);
            }
        });
        
        
        Scene scene = new Scene(grid, 300, 275);
        primaryStage.setScene(scene);
        scene.getStylesheets().add
                (Login.class.getResource("Login.css").toExternalForm());
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }
    
}
